@model ViewProfileViewModel

@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "View Profile";
}

@section Styles {
    <link rel="stylesheet" href="~/css/media.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/album.css" asp-append-version="true" />
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/select2/css/select2.css" asp-append-version="true" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css"
              referrerpolicy="no-referrer"
              crossorigin="anonymous"
              integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" />
    </environment>
}

@section Scripts {
    <script src="~/js/profile.js"></script>
    <script src="~/js/gallery.js"></script>
    <script src="~/js/album.js"></script>
    <environment include="Development">
        <script src="~/lib/select2/js/select2.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"
                referrerpolicy="no-referrer"
                crossorigin="anonymous"
                integrity="sha512-2ImtlRlf2VVmiGZsjm9bEyhjGW4dU7B6TNwh/hx/iSByxNENtj3WVE6o/9Lj4TJeVXPi4bnOIMXFIJJAeufa0A==">
        </script>
    </environment>
}

<div class="col-sm-3">
    <img class="rounded-circle shadow avatar-image" alt="Avatar" src="@Url.Content(Model.FilePath)">
</div>

@switch (Model.RelationToCurrentUser)
{
    case (RelationTypes.Friends):
        <a class="btn btn-primary unfriend">Unfriend</a>
        break;
    case (RelationTypes.Strangers):
        <a class="btn btn-primary send-friend-request">Send Friend Request</a>
        break;
    case (RelationTypes.PendingAccept):
        <a class="btn btn-success accept-friend-request">Accept friend request</a>
        <a class="btn btn-danger reject-friend-request">Reject friend request</a>
        break;
    case (RelationTypes.RequestedFriendship):
        <a class="btn btn-primary delete-friendrequest">Delete Friend Request</a>
        break;
    default:
        break;
}

@if (Model.Id.ToString() != UserManager.GetUserId(User))
{
    <span>@Model.MutualFriends mutual friends</span>

}

<dl>
    <input type="hidden" asp-for="Id" />
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.FirstName)
        </dd>
    </div>
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.LastName)
        </dd>
    </div>
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.BirthDate)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.BirthDate)
        </dd>
    </div>

    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.County)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.County)
        </dd>
    </div>
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.City)
        </dd>
    </div>
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class="col-sm-2">
            @Html.DisplayFor(model => model.Gender)
        </dd>
    </div>
    <div class="row">
        <dt class="col-sm-1">
            @Html.DisplayNameFor(model => model.Interests)
        </dt>
        <dd class="col-sm-2">
            <select asp-for="Interests" asp-items="ViewBag.Interests" class="form-control select2" multiple="multiple" disabled></select>
        </dd>
    </div>
</dl>


@if (Model.IsPrivate == false || Model.Id.ToString() == UserManager.GetUserId(User) || (Model.IsPrivate == true && Model.RelationToCurrentUser == RelationTypes.Friends))
{
    <div class="albums-container row">
        @foreach (var album in Model.Albums)
        {
            @await Html.PartialAsync("../Album/_Album", album)
        }
    </div>
}

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a class="close" data-dismiss="modal">&times;</a>
                <h4 class="modal-title" />
            </div>
            <div class="modal-body" id="modal-gallery">
            </div>
        </div>
    </div>
</div>


